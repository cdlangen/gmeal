{"version":3,"sources":["components/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","Dashboard","classes","React","useState","open","setOpen","anchorProfile","setAnchorProfile","handleProfileMenuClose","className","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","color","aria-label","onClick","Typography","component","variant","noWrap","Avatar","alt","window","gapi","auth2","getAuthInstance","currentUser","get","getBasicProfile","getName","getEmail","src","getImageUrl","event","console","log","currentTarget","Drawer","Container","maxWidth","id","anchorEl","keepMounted","Boolean","onClose","MenuItem","disabled","signOut","then","App","signedIn","setSignedIn","setCurrentUserProfile","onAuthChange","isSignedIn","onSignInButtonClick","signIn","useEffect","params","clientId","process","apiKey","scope","discoveryDocs","load","client","init","response","listen","Button","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.569ee4ac.chunk.js","sourcesContent":["import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Link from \"@material-ui/core/Link\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\n// import { mainListItems, secondaryListItems } from \"./listItems\";\n// import ShowAndTellList from \"./ShowAndTell\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: \"none\",\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const [anchorProfile, setAnchorProfile] = React.useState(null);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleProfileMenuOpen = (event) => {\n    console.log(\"HERE\");\n    setAnchorProfile(event.currentTarget);\n  };\n\n  const handleProfileMenuClose = () => {\n    setAnchorProfile(null);\n  };\n\n  const handleLogout = () => {\n    handleProfileMenuClose();\n    var auth2 = window.gapi.auth2.getAuthInstance();\n    auth2.signOut().then(function () {\n      console.log(\"User signed out.\");\n    });\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"absolute\"\n        className={clsx(classes.appBar, open && classes.appBarShift)}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(\n              classes.menuButton,\n              open && classes.menuButtonHidden\n            )}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.title}\n          >\n            Gmeal: meal planner\n          </Typography>\n          {/* <IconButton color=\"inherit\">\n            <Badge badgeContent={4} color=\"secondary\">\n              <NotificationsIcon />\n            </Badge>\n          </IconButton> */}\n\n          <Avatar\n            alt={\n              window.gapi.auth2\n                .getAuthInstance()\n                .currentUser.get()\n                .getBasicProfile()\n                .getName() +\n              \" <\" +\n              window.gapi.auth2\n                .getAuthInstance()\n                .currentUser.get()\n                .getBasicProfile()\n                .getEmail() +\n              \">\"\n            }\n            src={window.gapi.auth2\n              .getAuthInstance()\n              .currentUser.get()\n              .getBasicProfile()\n              .getImageUrl()}\n            onClick={handleProfileMenuOpen}\n          />\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        {/* <Divider />\n        <List>{mainListItems}</List>\n        <Divider />\n        <List>{secondaryListItems}</List> */}\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          {/* <Paper className={classes.paper}>\n            <ShowAndTellList />\n          </Paper> */}\n        </Container>\n      </main>\n\n      <Menu\n        id=\"profile-menu\"\n        anchorEl={anchorProfile}\n        keepMounted\n        open={Boolean(anchorProfile)}\n        onClose={handleProfileMenuClose}\n      >\n        <MenuItem onClick={handleProfileMenuClose} disabled>\n          My account\n        </MenuItem>\n        <MenuItem onClick={handleLogout}>Logout</MenuItem>\n      </Menu>\n    </div>\n  );\n}","import React, { useState, useEffect } from \"react\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Button from \"@material-ui/core/Button\";\n// import { google } from \"googleapis\";\n\nfunction App() {\n  const CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\n  const API_KEY = process.env.REACT_APP_API_KEY\n  const notLoggedInMessage = \"user not signed in\";\n  const [signedIn, setSignedIn] = useState(false);\n  const [currentUserProfile, setCurrentUserProfile] = useState({});\n\n  const onAuthChange = (isSignedIn) => {\n    setSignedIn(isSignedIn);\n    setCurrentUserProfile();\n  };\n\n  useEffect(() => {\n    const params = {\n      clientId: CLIENT_ID,\n      apiKey: API_KEY,\n      scope: \"https://www.googleapis.com/auth/calendar.events\",\n      discoveryDocs: [\n        \"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\",\n      ],\n    };\n\n    window.gapi.load(\"client:auth2\", () => {\n      window.gapi.client.init(params).then((response) => {\n        onAuthChange(window.gapi.auth2.getAuthInstance().isSignedIn.get());\n        window.gapi.auth2.getAuthInstance().isSignedIn.listen(onAuthChange);\n      });\n    });\n  }, []);\n\n  function onSignInButtonClick() {\n    window.gapi.auth2.getAuthInstance().signIn();\n  }\n\n  function getContent() {\n    if (signedIn) {\n      return <Dashboard></Dashboard>;;\n    } else {\n      return (\n        <div>\n          <p>You are not signed in... Click here to sign in.</p>\n          <Button id=\"loginButton\" onClick={onSignInButtonClick}>\n            Login with Google\n          </Button>\n        </div>\n      );\n    }\n  }\n\n  return <div className=\"App\">{getContent()}</div>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}